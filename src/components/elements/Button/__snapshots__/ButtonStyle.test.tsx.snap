// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test Button style should render right style 1`] = `
.c0 {
  cursor: pointer;
  outline: 0;
  border-radius: 0.1rem;
  display: inline-block;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  border: 0.05rem solid;
  background: #E2EAF2;
  border-color: #E2EAF2;
  color: #10161A;
  box-shadow: 0 0 0 0.1rem var(--box-shadow-color);
  font-size: 0.8rem;
  padding: 0.35rem 0.4rem;
  height: 1.8rem;
}

.c0:hover {
  background: #CED9E3;
  border-color: #CED9E3;
}

.c0:active,
.c0:focus {
  --box-shadow-color: transparent;
}

.c0:active {
  background: #B1EAFF;
  border-color: #B1EAFF;
}

.c0:focus {
  background: #B1EAFF;
  border-color: #B1EAFF;
}

.c0:disabled,
.c0[disabled] {
  cursor: not-allowed;
  color: #90A9BF !important;
  background: #CED9E3 !important;
  border: none;
}

<button
  aria-controls={undefined}
  aria-expanded={undefined}
  aria-haspopup={undefined}
  aria-label={undefined}
  className="c0"
  disabled={false}
  form={undefined}
  id={undefined}
  onBlur={[Function]}
  onClick={undefined}
  onFocus={[Function]}
  tabIndex={undefined}
  type="button"
/>
`;

exports[`test Button style should render right style 2`] = `
.c1 {
  cursor: pointer;
  outline: 0;
  border-radius: 0.1rem;
  display: inline-block;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  border: 0.05rem solid;
  background: #E2EAF2;
  border-color: #E2EAF2;
  color: #10161A;
  box-shadow: 0 0 0 0.1rem var(--box-shadow-color);
  font-size: 0.8rem;
  padding: 0.35rem 0.4rem;
  height: 1.8rem;
}

.c1:hover {
  background: #CED9E3;
  border-color: #CED9E3;
}

.c1:active,
.c1:focus {
  --box-shadow-color: transparent;
}

.c1:active {
  background: #B1EAFF;
  border-color: #B1EAFF;
}

.c1:focus {
  background: #B1EAFF;
  border-color: #B1EAFF;
}

.c1:disabled,
.c1[disabled] {
  cursor: not-allowed;
  color: #90A9BF !important;
  background: #CED9E3 !important;
  border: none;
}

.c0 {
  font-family: -apple-system,BlinkMacSystemFont,Helvetica,"Helvetica Neue",system-ui,sans-serif;
}

.c0 h1 {
  font-size: 2rem;
}

.c0 h2 {
  font-size: 1.6rem;
}

.c0 h3 {
  font-size: 1.4rem;
}

.c0 h4 {
  font-size: 1.2rem;
}

.c0 h5 {
  font-size: 1rem;
}

.c0 h6 {
  font-size: 0.8rem;
}

.c0 h1,
.c0 h2,
.c0 h3,
.c0 h4,
.c0 h5,
.c0 h6 {
  font-weight: 600;
  line-height: 1.25;
  margin-bottom: 0.5em;
  margin-top: 0;
}

.c0 h1,
.c0 h2,
.c0 h3,
.c0 h4 {
  color: #10161A;
}

.c0 h5,
.c0 h6 {
  color: #182026;
}

.c0 p {
  color: #202B33;
  line-height: 1.5;
  margin-bottom: 0.5em;
  margin-top: 0;
}

.c0 a {
  color: #008CC0;
  outline: none;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0 a:hover {
  color: #00A7E4;
}

.c0 a:focus,
.c0 a:hover,
.c0 a:active {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0 a:focus,
.c0 a:active {
  color: #007099;
}

.c0 a:focus {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0 b,
.c0 strong {
  font-weight: bolder;
}

.c0 code,
.c0 kbd,
.c0 pre,
.c0 samp {
  font-family: "Menlo, Courier, monospace";
}

.c0 code {
  color: #F22828;
  background: #FBFBFB;
  padding: 0.1rem 0.15rem;
  line-height: 1.2;
}

.c0 small {
  font-size: 80%;
  font-weight: 400;
  color: #566E82;
}

.c0 blockquote {
  margin-left: 0;
  padding: 0.4rem 0.8rem;
  color: #566E82;
}

.c0 blockquote p:last-child {
  margin-bottom: 0;
}

<div
  className="c0"
>
  <button
    aria-controls={undefined}
    aria-expanded={undefined}
    aria-haspopup={undefined}
    aria-label={undefined}
    className="c1"
    disabled={false}
    form={undefined}
    id={undefined}
    onBlur={[Function]}
    onClick={undefined}
    onFocus={[Function]}
    tabIndex={undefined}
    type="button"
  >
    Test
  </button>
</div>
`;
